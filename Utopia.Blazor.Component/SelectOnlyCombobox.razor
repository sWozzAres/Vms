@typeparam TValue
<label id="@id" class="@LabelClassName" for="@comboInputId">@Label</label>
<div class="@ComboClassName">

    <div id="@comboInputId" @ref="comboInputEl" class="@ComboInputClassName" role="combobox" tabindex="@ComboInputTabIndex"
         aria-controls="listbox1" aria-expanded="@open.ToHtml()" aria-haspopup="listbox" aria-labelledby="@id" aria-activedescendant="@ActiveItemId"
    @onblur="OnComboInputBlur" @onclick="OnComboInputClick">
        <span>@SelectItems[selectedIndex].Name</span>
        <svg viewBox="0 0 512 512">
            <use xlink:href="icons/solid.svg#chevron-down" />
        </svg>
    </div>

    <div id="@comboMenuId" class="combo-menu" role="listbox" aria-labelledby="@id" tabindex="-1"
    @onmousedown="() => OnComboMenuMouseDown()">

        @for (int index = 0; index < SelectItems.Count; index++)
        {
            var idx = index;
            var item = SelectItems[idx];

            var isSelected = selectedIndex == idx;
            var className2 = activeIndex == idx ? "combo-option option-current" : "combo-option";

            <div id="@item.Id" role="option" class="@className2" aria-selected="@isSelected.ToHtml()"
            @onclick="async () => await OnComboMenuClick(idx)" @onclick:stopPropagation>
                <svg viewBox="0 0 448 512">
                    <use xlink:href="icons/solid.svg#check" />
                </svg>
                <span>@item.Name</span>
            </div>
        }
    </div>
</div>
