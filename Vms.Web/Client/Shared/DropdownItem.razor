@inject ILogger<DropdownItem> Logger

@{
    //Parent.AddDropdownItem(this);

    Logger.LogInformation("{counter} SelectedValue {selectedValue}, Value {value}.", counter++, Parent?.SelectedValue, Value);
    var className = Parent?.SelectedValue == Value ? "focus" : string.Empty;
}
<li id="@Id" class="@className" role="menuitem" tabindex="-1"
@onclick="onMenuitemClick">
    @ChildContent
</li>
@code {
    static int counter = 0;

    [EditorRequired, Parameter]
    public RenderFragment ChildContent { get; set; } = null!;

    [EditorRequired, Parameter]
    public int Value { get; set; }

    [CascadingParameter]
    public DropdownButton Parent { get; set; } = null!;

    string Id => $"{Parent.Id}-{Value}";

    private async Task onMenuitemClick(MouseEventArgs e)
    {
        Logger.LogInformation("onMenuItemClick {value}", Value);
        await Parent.ChildSelected(Value);
    }

    protected override void OnParametersSet()
    {
        //base.OnParametersSet();
        Parent.AddDropdownItem(this);
    }
}
