@page "/company/list"
@attribute [Authorize]
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Companies</PageTitle>

<ListTemplate Context="item" TItem="CompanyListModel"
              OnLoad="LoadItemsAsync"
              Lists="lists"
              Title="Companies">
    <Icon>
        <div class="purple">
            <svg viewBox="0 0 384 512">
                <use xlink:href="icons/solid.svg#building" />
            </svg>
        </div>
    </Icon>
    <HeaderButtons>
        <button onclick="@(() => NavigationManager.NavigateTo("/company/create"))">New</button>
        <button>Import</button>
        <button>Add to Campaign</button>
    </HeaderButtons>
    <TableHeader>
        <th>Code</th>
        <th>Name</th>
    </TableHeader>
    <RowTemplate>
        <td><a href="/company/view/@item.Code">@item.Code</a></td>
        <td><a href="/company/view/@item.Code">@item.Name</a></td>
    </RowTemplate>
</ListTemplate>

@code {
    public SelectOption[] lists = new SelectOption[]
    {
        new SelectOption(0, "All Companies"),
        new SelectOption(1, "Recently Viewed"),
        new SelectOption(2, "Pinned"),
    };

    // private Dictionary<int, string> lists = new()
    // {
    //     {0, "All Companies" },
    //     {1, "Recently Viewed" },
    //     {2, "Pinned" }
    // };

    public async Task<IEnumerable<CompanyListModel>> LoadItemsAsync(int list)
        => await Http.GetFromJsonAsync<List<CompanyListModel>>($"/api/Company?list={list}")
            ?? Enumerable.Empty<CompanyListModel>();
}
