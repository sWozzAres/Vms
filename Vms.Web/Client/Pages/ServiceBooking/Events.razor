@if (ServiceBooking.MotEvent is not null)
{
    <RelatedItem TypeName="Mot" Item="ServiceBooking.MotEvent" Context="Mot">
        <IconContent>
            <div class="entity-svg-mot">
                <svg viewBox="0 0 512 512">
                    <use xlink:href="icons/solid.svg#list-check" />
                </svg>
            </div>
        </IconContent>
        <Buttons>
            <button @onclick="() => runTask = 1">Complete</button>
        </Buttons>
        <ItemTemplate>
            <div class="content-header">
                <h1><a href="/motevent/view/@Mot.Id">Mot</a></h1>
                @* <MenuButton Items="@driverOptions" Align="MenuButton.Alignment.Right"
            OnSelectCallback="(val) => OptionSelected(val, customer)" /> *@
            </div>
            <dl>
                <dt>Due:</dt>
                <dd>@Mot.Due</dd>
            </dl>
        </ItemTemplate>
    </RelatedItem>
}
@if (runTask == 1)
{
    <TaskChangeMotStatus OnCompleted="TaskCompleted" ServiceBooking="ServiceBooking" />
}
@code {
    [Parameter, EditorRequired] public ServiceBookingFullDto ServiceBooking { get; set; } = null!;
    //[Parameter, EditorRequired] public EventCallback<int> RunTask { get; set; }

    void TaskCompleted(bool save)
    {
        runTask = null;
    }

    int? runTask;

    protected override void OnInitialized()
    {
        ArgumentNullException.ThrowIfNull(ServiceBooking);
        //if (!RunTask.HasDelegate) throw new ArgumentNullException(nameof(RunTask));
    }
}
